/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.createGUI.salesInvoiceGUI;

import com.mycompany.finaltermproject.ImportUI;
import com.mycompany.HandlerClass.Function;
import com.mycompany.finaltermproject.SalesInvoiceGUI;
import com.sqlConnection.JDBCUtil;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author trieu
 */
public class SalesInvoiceDetail extends javax.swing.JFrame {

    DefaultTableModel choiseProductTableModel;
    String idPhieuBan = null;

    /**
     * Creates new form AddProduct
     */
    public SalesInvoiceDetail() {
        initComponents();
        this.choiseProductTableModel = (DefaultTableModel) choiseProductTable.getModel();
        choiseProductTableModel.setRowCount(0);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    public SalesInvoiceDetail(String id, String trangThai) {
        initComponents();
        idPhieuBan = id;

        switch (trangThai) {
            case "0" -> {
                confirmBtn.setEnabled(true);
                returnBtn.setEnabled(false);
                killNoteBtn.setEnabled(true);
            }
            case "1" -> {
                confirmBtn.setEnabled(false);
                returnBtn.setEnabled(true);
                killNoteBtn.setEnabled(false);
            }
            default -> {
                confirmBtn.setEnabled(false);
                returnBtn.setEnabled(false);
                killNoteBtn.setEnabled(false);
            }
        }

        this.choiseProductTableModel = (DefaultTableModel) choiseProductTable.getModel();
        choiseProductTableModel.setRowCount(0);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        String query = "SELECT * "
                + " FROM phieuban p"
                + " Join ctphieuban ctb "
                + " On p.ma_phieu_ban = ctb.ma_phieu_ban "
                + " Join products pr "
                + " On pr.id = ctb.ma_san_pham "
                + " Join khach_hang kh"
                + " On p.khach_hang = kh.ma_khach_hang "
                + " Where ctb.ma_phieu_ban = ?";

        try (Connection con = JDBCUtil.getConnection(); ResultSet resultSet = JDBCUtil.getResultSet(con, query, 1, id)) {
            if (resultSet.next()) {

                // Gán giá trị và tắt thay đổi
                idPhieuBanTF.setText(resultSet.getString("p.ma_phieu_ban"));
                idPhieuBanTF.setEnabled(false);

                accountNameTF.setText(resultSet.getString("p.account_id"));
                accountNameTF.setEnabled(false);

                customerNameTF.setText(resultSet.getString("kh.ten_khach_hang"));
                customerNameTF.setEnabled(false);

                dateTF.setText(resultSet.getDate("p.thoi_gian").toString());
                dateTF.setEnabled(false);

                choiseProductTableModel.setRowCount(0);
                do {
                    // Get values from the selected row
                    int nextSTT = choiseProductTableModel.getRowCount() + 1; // STT tiếp theo
                    String productId = resultSet.getString("ctb.ma_san_pham");
                    String name = resultSet.getString("pr.product_name");
                    String importPrice = Function.dinhDangTien(resultSet.getInt("ctb.don_gia"));
                    String quantity = resultSet.getString("ctb.quantity");

                    Object[] row = {nextSTT, id, name, importPrice, quantity};
                    choiseProductTableModel.addRow(row);
                } while (resultSet.next());
            } else {
                JOptionPane.showMessageDialog(null, "Không tìm thấy phiếu !");
            }
        } catch (SQLException ex) {
            Logger.getLogger(SalesInvoiceDetail.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idPhieuBanTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        accountNameTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        customerNameTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dateTF = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        choisePane = new javax.swing.JScrollPane();
        choiseProductTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        killNoteBtn = new javax.swing.JButton();
        confirmBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        returnBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grocery Store");
        setBackground(new java.awt.Color(204, 255, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                backToImportUI(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jLabel1.setText("Mã phiếu bán:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 10, 20);
        jPanel4.add(jLabel1, gridBagConstraints);

        idPhieuBanTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idPhieuBanTF.setText("1234");
        idPhieuBanTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idPhieuBanTFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 30, 20);
        jPanel4.add(idPhieuBanTF, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jLabel2.setText("Nhân viên bán:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 10, 20);
        jPanel4.add(jLabel2, gridBagConstraints);

        accountNameTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        accountNameTF.setText("Vũ Khoa");
        accountNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountNameTFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 30, 20);
        jPanel4.add(accountNameTF, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jLabel4.setText("Khách hàng:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 10, 20);
        jPanel4.add(jLabel4, gridBagConstraints);

        customerNameTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        customerNameTF.setText("Công ty TNHH Trung Kiên");
        customerNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameTFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 30, 20);
        jPanel4.add(customerNameTF, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jLabel6.setText("Thời gian tạo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 10, 20);
        jPanel4.add(jLabel6, gridBagConstraints);

        dateTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dateTF.setText("Công ty TNHH Trung Kiên");
        dateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 30, 20);
        jPanel4.add(dateTF, gridBagConstraints);

        getContentPane().add(jPanel4);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        choisePane.setBackground(new java.awt.Color(255, 255, 255));

        choiseProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã SP", "Tên sản phẩm", "Đơn giá", "Số lượng"
            }
        ));
        choiseProductTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                choiseProductTableMouseClicked(evt);
            }
        });
        choisePane.setViewportView(choiseProductTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        jPanel9.add(choisePane, gridBagConstraints);

        getContentPane().add(jPanel9);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButton1.setBackground(new java.awt.Color(51, 204, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Xuất PDF");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 20, 10);
        jPanel1.add(jButton1, gridBagConstraints);

        killNoteBtn.setBackground(new java.awt.Color(255, 102, 102));
        killNoteBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        killNoteBtn.setForeground(new java.awt.Color(255, 255, 255));
        killNoteBtn.setText("Hủy Phiếu");
        killNoteBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        killNoteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                killNoteBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 20, 10);
        jPanel1.add(killNoteBtn, gridBagConstraints);

        confirmBtn.setBackground(new java.awt.Color(102, 204, 0));
        confirmBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        confirmBtn.setForeground(new java.awt.Color(255, 255, 255));
        confirmBtn.setText("Xác nhận");
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 20, 10);
        jPanel1.add(confirmBtn, gridBagConstraints);

        backBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 20, 10);
        jPanel1.add(backBtn, gridBagConstraints);

        returnBtn.setBackground(new java.awt.Color(255, 153, 0));
        returnBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        returnBtn.setForeground(new java.awt.Color(255, 255, 255));
        returnBtn.setText("Trả hàng");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 20, 10);
        jPanel1.add(returnBtn, gridBagConstraints);

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idPhieuBanTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idPhieuBanTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idPhieuBanTFActionPerformed

    private void accountNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountNameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountNameTFActionPerformed

    private void customerNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameTFActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void choiseProductTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_choiseProductTableMouseClicked

    }//GEN-LAST:event_choiseProductTableMouseClicked

    private void dateTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTFActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void killNoteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_killNoteBtnActionPerformed
        killNoteBtn.addActionListener(e -> {
            if (idPhieuBan == null || idPhieuBan.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Mã phiếu bán không hợp lệ!");
                return;
            }

            // Câu lệnh SQL
            String updatePhieuBanQuery = "UPDATE phieuban SET trang_thai = 2 WHERE ma_phieu_ban = ?";
            String resetQuantityReturnedQuery = "UPDATE ctphieuban SET quantity_returned = 0 WHERE ma_phieu_ban = ?";

            try (Connection con = JDBCUtil.getConnection(); PreparedStatement updatePhieuBanStmt = con.prepareStatement(updatePhieuBanQuery); PreparedStatement resetQuantityReturnedStmt = con.prepareStatement(resetQuantityReturnedQuery)) {

                // Gán tham số cho câu lệnh SQL
                updatePhieuBanStmt.setString(1, idPhieuBan);
                resetQuantityReturnedStmt.setString(1, idPhieuBan);

                // Đặt lại số lượng trả về 0 trong ctphieuban
                int quantityResetRows = resetQuantityReturnedStmt.executeUpdate();
                if (quantityResetRows > 0) {
                    System.out.println("Đặt lại số lượng trả trong ctphieuban thành công!");
                } else {
                    System.out.println("Không có dữ liệu nào trong ctphieuban cần đặt lại.");
                }

                // Cập nhật trạng thái phiếu bán
                int phieuBanRowsUpdated = updatePhieuBanStmt.executeUpdate();
                if (phieuBanRowsUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Hủy phiếu bán thành công!");
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy phiếu bán để hủy!");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi khi hủy phiếu bán: " + ex.getMessage());
            }
        });

    }//GEN-LAST:event_killNoteBtnActionPerformed

    private void backToImportUI(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_backToImportUI
        SalesInvoiceGUI salesInvoiceGUI = new SalesInvoiceGUI();
        salesInvoiceGUI.setLocation(this.getX(), this.getY());
        salesInvoiceGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backToImportUI

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        try (Connection con = JDBCUtil.getConnection(); PreparedStatement confirmInvoice = con.prepareStatement("UPDATE phieuban SET trang_thai = 1 WHERE ma_phieu_ban = ?"); PreparedStatement updateProductQuantity = con.prepareStatement(
                "UPDATE products p "
                + "SET p.quantity = p.quantity - ("
                + "    SELECT SUM(ct.quantity) "
                + "    FROM ctphieuban ct "
                + "    WHERE ct.ma_phieu_ban = ? AND ct.ma_san_pham = p.id"
                + ") "
                + "WHERE EXISTS ("
                + "    SELECT 1 "
                + "    FROM ctphieuban ct "
                + "    WHERE ct.ma_phieu_ban = ? AND ct.ma_san_pham = p.id"
                + ")"
        )) {

            // Gán giá trị cho tham số để xác nhận hóa đơn
            confirmInvoice.setString(1, idPhieuBan);

            // Thực thi câu lệnh xác nhận hóa đơn
            int rowsUpdated = confirmInvoice.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Xác nhận hóa đơn thành công!");

                // Gán giá trị cho tham số để cập nhật số lượng sản phẩm
                updateProductQuantity.setString(1, idPhieuBan);
                updateProductQuantity.setString(2, idPhieuBan);

                // Thực thi câu lệnh cập nhật quantity
                int productRowsUpdated = updateProductQuantity.executeUpdate();
                if (productRowsUpdated > 0) {
                    System.out.println("Cập nhật số lượng sản phẩm thành công! Số dòng bị ảnh hưởng: " + productRowsUpdated);
                } else {
                    System.out.println("Không có sản phẩm nào để cập nhật số lượng.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy hóa đơn cần cập nhật trong cơ sở dữ liệu.");
            }

            // Đóng giao diện hiện tại sau khi xác nhận thành công
            this.dispose();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
        }
    }//GEN-LAST:event_confirmBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SalesInvoiceDetail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accountNameTF;
    private javax.swing.JButton backBtn;
    private javax.swing.JScrollPane choisePane;
    private javax.swing.JTable choiseProductTable;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JTextField customerNameTF;
    private javax.swing.JTextField dateTF;
    private javax.swing.JTextField idPhieuBanTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton killNoteBtn;
    private javax.swing.JButton returnBtn;
    // End of variables declaration//GEN-END:variables
}
